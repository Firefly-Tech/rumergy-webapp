version: "3.4"
services:
  db:
    restart: always
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASS}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    ports:
      - "3302:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_HOST=${REACT_APP_API_HOST}
        - MODBUS_USER=${RPYC_USER}
    volumes:
      - react_build:/app/frontend/build
    depends_on:
      - backend
  backend:
    restart: always
    build:
      context: backend
      dockerfile: Dockerfile
    environment:
      SECRET_KEY: ${SECRET_KEY}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_CHAR_SET: ${DB_CHAR_SET}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_HOST_USER: ${EMAIL_HOST_USER}
      EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
      RPYC_USER: ${RPYC_USER}
      RPYC_PASS: ${RPYC_PASS}
      SCHED_SERVER_HOST: ${SCHED_SERVER_HOST}
      SCHED_SERVER_PORT: ${SCHED_SERVER_PORT}
      APP_URL: ${APP_URL}
    depends_on:
      - db
    volumes:
      - ./logs:/var/log
    entrypoint: /app/backend/wsgi-entrypoint.sh
    expose:
      - 8000
  nginx:
    container_name: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
      network: host
      args:
        - CERTBOT_EMAIL=${CERTBOT_EMAIL}
        - DOMAIN_LIST=${DOMAIN_LIST}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/rumergy:ro
      - letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - frontend
volumes:
  react_build:
